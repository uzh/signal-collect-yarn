
deployment {
	applicationName = "signal-collect-yarn-deployment"
	leader-memory = 512
	
	applicationMaster = "com.signalcollect.yarn.applicationmaster.ApplicationMaster"
	mainClass = "com.signalcollect.nodeprovisioning.yarn.ContainerNodeApp"
	pathToJar = "target/scala-2.11/signal-collect-yarn-assembly-1.0-SNAPSHOT.jar"
	#pathToJar = "signal-collect-yarn-assembly-1.0-SNAPSHOT.jar"
	files-on-hdfs = []
	#files-on-hdfs = ["hdfs://tentacle.ifi.uzh.ch:9000/ddis/tbachmann/web-split-0",
	 # "hdfs://tentacle.ifi.uzh.ch:9000/ddis/tbachmann/web-split-1",
	  #"hdfs://tentacle.ifi.uzh.ch:9000/ddis/tbachmann/web-split-2",
	  #"hdfs://tentacle.ifi.uzh.ch:9000/ddis/tbachmann/web-split-3",
	  #"hdfs://tentacle.ifi.uzh.ch:9000/ddis/tbachmann/signal-collect-yarn-assembly-1.0-SNAPSHOT.jar"]
	#hdfspath = "/ddis/tbachmann/signal-collect-yarn-deployment"
	hdfspath = "signal-collect-yarn-deployment"
	timeout = 400
	
	
	akka {
	  port: 2552
	  kryo-initializer = "com.signalcollect.configuration.KryoInit"
      #kryo-registrations = [
        #"akka.remote.EndpointWriter$OutboundAck",
        #"com.signalcollect.interfaces.AddVertex"
      #]
      serialize-messages = true
	}
	hadoop-overrides {
  	  yarn {
  		resourcemanager {
  		    #if you user master, it will be replaced with the amazon master ip.
  			host = "master" 
  			#host = "salvador.ifi.uzh.ch"
  			address = "master:9022"
  			admin.address = "master:9025"
  			#address = "salvador.ifi.uzh.ch:8032"
  			resource-tracker.address= "master:9023"
  			scheduler {
  			  address = "master:9024"
  			}
  		}
  	  }
  	fs.defaultFS = "s3n://public:secret@signalcollect"
  	 
	}
	
}
