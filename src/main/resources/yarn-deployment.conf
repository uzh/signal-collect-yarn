# This is a test deployment configuration.
# The actually used configuration has the be named deployment.config
deployment {
	applicationName = "signal-collect-yarn-deployment"
	memory = 512
	containerMemory = 512
	applicationMaster = "com.signalcollect.yarn.applicationmaster.ApplicationMaster"
	mainClass = "com.signalcollect.nodeprovisioning.yarn.ContainerNodeApp"
	pathToJar = "target/scala-2.10/signal-collect-yarn-assembly-1.0-SNAPSHOT.jar"
	numberOfNodes = 1
	
	testing{
	  useMiniCluster = false
	  createJarOnTheFly = true
	  dependency = "../signal-collect-yarn-dependencies/target/scala-2.10/signal-collect-yarn-assembly-1.0-SNAPSHOT.jar"
	}
	
	akka {
	  port: 2552
	  kryo-initializer = "com.signalcollect.configuration.KryoInit"
#   kryo-registrations = [
#     "com.signalcollect.triplerush.vertices.SIndex",
#     "com.signalcollect.triplerush.vertices.PIndex",
#     "com.signalcollect.triplerush.vertices.OIndex",
#     "com.signalcollect.triplerush.vertices.SPIndex",
#     "com.signalcollect.triplerush.vertices.POIndex",
#     "com.signalcollect.triplerush.vertices.SOIndex",
#     "com.signalcollect.triplerush.TriplePattern",
#     "com.signalcollect.triplerush.PlaceholderEdge",
#     "com.signalcollect.triplerush.CardinalityRequest",
#     "com.signalcollect.triplerush.CardinalityReply",
#     "com.signalcollect.triplerush.ChildIdRequest",
#     "com.signalcollect.triplerush.ChildIdReply",
#     "Array[com.signalcollect.triplerush.TriplePattern]",
#     "com.signalcollect.interfaces.SignalMessage$mcIJ$sp",
#     "com.signalcollect.interfaces.AddEdge",
#     "akka.actor.RepointableActorRef"
#     ]
	}
	
	yarn {
		resourcemanager {
			host = "127.0.0.1"
			address = "127.0.0.1:8032"
		}
	}
	
	setup {
		#copy-files = [false  
        #    {
        #        local-path = "./some-local-file-name"
        #        remote-path = "~/some-remote-file-name"
        #    }
		#]
	}
	algorithm {
		class = "com.signalcollect.deployment.PageRankExample"
		parameters {
			"some-parameter-name" = "some-parameter-value"
		}
	}
}
